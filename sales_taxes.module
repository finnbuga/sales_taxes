<?php

/**
 * Implements hook_menu().
 */
function sales_taxes_menu() {
  $items = array();

  $items['sales_taxes'] = array(
    'title' => 'Sales Taxes',
    'description' => 'Displays the receipt details for a shopping basket',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sales_taxes_form'),
    'access callback' => TRUE
  );

  return $items;
}

/**
 * Implements a form using the Form API.
 */
function sales_taxes_form($form, &$form_state) {

 $form['shopping_basket'] = array(
    '#type' => 'textfield',
    '#title' => t('Your shopping basket'),
    '#size' => 100,
    '#maxlength' => 1000,
    '#required' => TRUE,
  );

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Get receipt'),
  );

  return $form;
}

/**
 * Implements validation using the Form API.
 *
 * @param $form A structured array containing the elements and properties of the form.
 * @param $form_state An array that stores information about the form's current state during processing.
 */
function sales_taxes_form_validate($form, &$form_state) {
  $shopping_basket = _sales_taxes_extract_shopping_basket($form_state['values']['shopping_basket']);
  if (empty($shopping_basket)) {
    form_set_error('shopping_basket', t('Please enter a valid Shopping basket'));
  }
}

/**
 * Implements submission using the Form API.
 *
 * @param $form A structured array containing the elements and properties of the form.
 * @param $form_state An array that stores information about the form's current state during processing.
 */
function sales_taxes_form_submit($form, &$form_state) {
  $shopping_basket = _sales_taxes_extract_shopping_basket($form_state['values']['shopping_basket']);

  drupal_set_message($shopping_basket->get_receipt());
}

/**
 * Extracts shopping basket data from input.
 *
 * @param  string $input The input with the following format:
 *         '1 imported box of chocolates at 10.00 1 imported bottle of perfume at 47.50'
 * @return sales_taxes_shopping_basket The shopping basket
 */
function _sales_taxes_extract_shopping_basket($input) {
  preg_match_all('/(\d+) (imported )*([\w ]+) at (\d+\.\d+)[ ]*/', $input, $matches);

  for ($i=0; $i<sizeof($matches[0]); $i++) {
    $quantity = $matches[1][$i];

    $imported = !empty($matches[2][$i]);
    $product_name = $matches[3][$i];
    $price = $matches[4][$i];

    $products[$i] = new sales_taxes_product($product_name, $price, $imported);
    $quantities[$i] = $quantity;
  }

  return empty($products) ? false : new sales_taxes_shopping_basket($products, $quantities);
}
